# Attention, this is a template that is run through envsubst, but with a specific list of variables to replace. Thus:
# - HOOK_KERNEL_IMAGE: ${HOOK_KERNEL_IMAGE}
# - HOOK_KERNEL_ID: ${HOOK_KERNEL_ID}
# - HOOK_CONTAINER_BOOTKIT_IMAGE: ${HOOK_CONTAINER_BOOTKIT_IMAGE}
# - HOOK_CONTAINER_DOCKER_IMAGE: ${HOOK_CONTAINER_DOCKER_IMAGE}
# - HOOK_CONTAINER_MDEV_IMAGE: ${HOOK_CONTAINER_MDEV_IMAGE}
# - Other variables are not replaced: for example this is a literal dollarsign-SOMETHING: $SOMETHING and with braces: ${SOMETHING}

kernel:
  image: "${HOOK_KERNEL_IMAGE}"
  cmdline: "this_is_not_used=at_at_all_in_hook command_line_is_determined_by=ipxe"

init:
  - linuxkit/init:144c9cee8aed9e30a16940f2bf1d3813883aceda
  # can't use the latest version of runc because it has a bug that prevents docker from starting containers properly.
  - linuxkit/runc:v0.8
  - linuxkit/containerd:d445de33c7f08470187b068d247b1c0dea240f0a
  - linuxkit/ca-certificates:c1c73ef590dffb6a0138cf758fe4a4305c9864f4

onboot:
  - name: sysctl
    image: linuxkit/sysctl:a88a50c104d538b58da5e1441f6f0b4b738f76a6

  - name: sysfs
    image: linuxkit/sysfs:5fd982d39ff7bec8e480c67a110acb2d3794c291

  - name: vlan
    image: linuxkit/ip:6cc44dd4e18ddb02de01bc4b34b5799971b6a7bf
    binds.add:
      - /etc/ip/vlan.sh:/etc/ip/vlan.sh
    command: [ "/etc/ip/vlan.sh" ]

  - name: dhcpcd
    image: linuxkit/dhcpcd:52d2c4df0311b182e99241cdc382ff726755c450
    command: [ "/etc/ip/dhcp.sh", "true" ] # 2nd paramter is one-shot true/false: true for onboot, false for services
    capabilities.add:
      - CAP_SYS_TIME # for ntp one-shot no-max-offset after ntpd, for hardware missing RTC's that boot in 1970
    binds.add:
      - /var/lib/dhcpcd:/var/lib/dhcpcd
      - /run:/run
      - /etc/ip/dhcp.sh:/etc/ip/dhcp.sh
      - /dhcpcd.conf:/dhcpcd.conf
    runtime:
      mkdir:
        - /var/lib/dhcpcd

services:

  - name: rngd
    image: linuxkit/rngd:310c16ec5315bd07d4b8f5332cfa7dc5cbc7d368

  - name: ntpd
    image: linuxkit/openntpd:c90c6dd90f5dfb0ca71a73aac2dad69c8d956af3

  - name: mdev
    image: "${HOOK_CONTAINER_MDEV_IMAGE}"
    command: [ "mdev", "-v", "-S", "-df" ]
    capabilities:
      - all
    binds:
      - /dev/:/dev/
      - /lib/modules:lib/modules
    rootfsPropagation: shared
    devices:
      - path: all
        type: b

  - name: getty
    image: linuxkit/getty:76951a596aa5e0867a38e28f0b94d620e948e3e8
    binds.add:
      - /etc/profile.d/local.sh:/etc/profile.d/local.sh
      - /etc/motd:/etc/motd
      - /etc/os-release:/etc/os-release
    env:
      - INSECURE=true

  - name: hook-docker
    image: "${HOOK_CONTAINER_DOCKER_IMAGE}"
    capabilities:
      - all
    net: host
    pid: host
    mounts:
      - type: cgroup
        options: [ "rw", "nosuid", "noexec", "nodev", "relatime" ]
    binds:
      - /dev/console:/dev/console
      - /dev:/dev
      - /etc/resolv.conf:/etc/resolv.conf
      - /lib/modules:/lib/modules
      - /var/run/docker:/var/run
      - /var/run/images:/var/lib/docker
      - /var/run/worker:/worker
    runtime:
      mkdir:
        - /var/run/images
        - /var/run/docker
        - /var/run/worker

  - name: hook-bootkit
    image: "${HOOK_CONTAINER_BOOTKIT_IMAGE}"
    capabilities:
      - all
    net: host
    mounts:
      - type: cgroup
        options: [ "rw", "nosuid", "noexec", "nodev", "relatime" ]
    binds:
      - /var/run/docker:/var/run
    runtime:
      mkdir:
        - /var/run/docker

#dbg  - name: sshd
#dbg    image: linuxkit/sshd:666b4a1a323140aa1f332826164afba506abf597

files:
  - path: etc/profile.d/local.sh
    contents: |
      alias       docker='ctr -n services.linuxkit tasks exec --tty --exec-id cmd hook-docker docker'
      alias docker-shell='ctr -n services.linuxkit tasks exec --tty --exec-id shell hook-docker sh'
      name_version=$(grep PRETTY_NAME= /etc/os-release | cut -d'=' -f2 | tr -d '"')
      export PS1='${name_version}:\w\$ '
      # Disable kernel messages on console
      # rpardini: why? # echo 4 > /proc/sys/kernel/printk
    mode: "0644"

  - path: etc/motd
    mode: "0644"
    # This is ANSI Regular font
    contents: |
      Welcome to HookOS! Your Tinkerbell operating system installation environment.

      ██   ██                   ██       ██████  ███████
      ██   ██  ██████   ██████  ██  ██  ██    ██ ██
      ███████ ██    ██ ██    ██ █████   ██    ██ ███████
      ██   ██ ██    ██ ██    ██ ██  ██  ██    ██      ██
      ██   ██  ██████   ██████  ██   ██  ██████  ███████

      - This Hook is using kernel ${HOOK_KERNEL_ID}
      - Use `docker` commands to access the tink worker/agent container and workflow action containers.
      - Logs are located in the `/var/log/` directory.

  - path: etc/os-release
    mode: "0444"
    contents: |
      NAME="HookOS"
      VERSION=0.8.1
      ID=hookos
      VERSION_ID=0.8.1
      PRETTY_NAME="HookOS 0.8.1"
      ANSI_COLOR="1;34"
      HOME_URL="https://github.com/tinkerbell/hook"

  - path: etc/ip/vlan.sh
    source: "files/vlan.sh"
    mode: "0777"

  - path: etc/ip/dhcp.sh
    source: "files/dhcp.sh"
    mode: "0777"

  - path: dhcpcd.conf
    source: "files/dhcpcd.conf"
    mode: "0644"

#dbg  - path: root/.ssh/authorized_keys
#dbg    source: ~/.ssh/id_rsa.pub
#dbg    mode: "0600"
#dbg    optional: true

trust:
  org:
    - linuxkit
    - library
